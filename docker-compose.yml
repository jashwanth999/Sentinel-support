version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sentinel}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sentinel}
      POSTGRES_DB: ${POSTGRES_DB:-sentinel}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sentinel}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/sql/init.sql:/docker-entrypoint-initdb.d/00-init.sql

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
    ports:
      - "${API_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
      - ./api/.env
    volumes:
      - ./api:/usr/src/api
      - ./fixtures:/usr/src/fixtures:ro
      - ./scripts:/usr/src/scripts

  web:
    build:
      context: ./web
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      api:
        condition: service_started
    env_file:
      - ./.env
      - ./web/.env
    # volumes:
    #   - ./web:/usr/src/web

  # prometheus:
  #   image: prom/prometheus:latest
  #   restart: unless-stopped
  #   volumes:
  #     - ./docs/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - "--storage.tsdb.retention.time=2d"
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - api

  # grafana:
  #   image: grafana/grafana:latest
  #   restart: unless-stopped
  #   ports:
  #     - "3002:3000"
  #   depends_on:
  #     - prometheus
  #   volumes:
  #     - grafana-data:/var/lib/grafana

volumes:
  postgres-data:
  grafana-data:
